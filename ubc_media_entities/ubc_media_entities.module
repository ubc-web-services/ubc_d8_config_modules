<?php

use Drupal\Core\StreamWrapper\StreamWrapperManager;
use Drupal\user\Entity\Role;
use Drupal\Core\Config\FileStorage;

/**
 * Helper function to import single config file.
 *
 * @param string $config_name
 *   The name of the config item to import from the config sync folder.
 */
function ubc_media_entities_import_single_config($config_name) {
  $config_path = \Drupal::service('extension.list.module')->getPath('ubc_media_entities') . '/config/install/';
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');
  $config_storage->write($config_name, $source->read($config_name));
}

/**
 * Implements hook_file_download().
 * https://www.chapterthree.com/blog/drupal-8-9-media-entities-private-files-and-broken-access-control
 */
function ubc_media_entities_file_download($uri) {
  # Check if the file is coming from the private stream wrapper
  if (StreamWrapperManager::getScheme($uri) == 'private') {

    # 1: Block anonymous users.
    if (\Drupal::currentUser()->isAnonymous()) {
      return -1;
    }

    # 2: The user does not have the permission "access private files".
    if (!\Drupal::currentUser()->hasPermission('access private files')) {
      return -1;
    }
  }

  return NULL;
}

/**
 * Implements hook_post_update_()
 * Add permission to view private files
 */
function ubc_media_entities_post_update_grant_private_file_permission() {
  $role_object = Role::load('authenticated');
  $role_object->grantPermission('access private files');
  $role_object->save();
}

/**
 * Implements hook_post_update_()
 * Update wide and narrow view modes to use lazy loading
 */
function ubc_media_entities_post_update_10001() {
  $config = \Drupal::service('config.factory');
  // alter preexisting media view mode when installing
  $config->getEditable('core.entity_view_display.media.image.full')
    ->set('content.field_media_image.settings.image_loading.attribute', 'lazy')
    ->save();
  $config->getEditable('core.entity_view_display.media.image.narrow')
    ->set('content.field_media_image.settings.image_loading.attribute', 'lazy')
    ->save();
}

/**
 * Implements hook_post_update_()
 * Add an Original Image view mode for image media
 */
function ubc_media_entities_post_update_10002() {
  ubc_media_entities_import_single_config('core.entity_view_mode.media.original');
  ubc_media_entities_import_single_config('core.entity_view_display.media.image.original');
}
